name: Spotify Debug

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Show env vars
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
        run: |
          echo "SPOTIFY_CLIENT_ID     = ${SPOTIFY_CLIENT_ID}"
          echo "SPOTIFY_CLIENT_SECRET = ${SPOTIFY_CLIENT_SECRET}"
          echo "SPOTIFY_REFRESH_TOKEN length = ${#SPOTIFY_REFRESH_TOKEN}"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install requests
        run: pip install requests

      - name: Test Spotify token exchange
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}
        run: |
          python - <<'PY'
import os, base64, requests, sys, traceback

CID = os.getenv("SPOTIFY_CLIENT_ID")
CS  = os.getenv("SPOTIFY_CLIENT_SECRET")
RT  = os.getenv("SPOTIFY_REFRESH_TOKEN")

print("CID:", CID)
print("CS length:", len(CS) if CS else "MISSING")
print("RT length:", len(RT) if RT else "MISSING")

try:
    auth = base64.b64encode(f"{CID}:{CS}".encode()).decode()
    r = requests.post(
        "https://accounts.spotify.com/api/token",
        data={"grant_type":"refresh_token","refresh_token":RT},
        headers={"Authorization": f"Basic {auth}"},
        timeout=20,
    )
    print("Status:", r.status_code)
    print("Response:", r.text)
    r.raise_for_status()
    token = r.json().get("access_token")
    print("Access token length:", len(token) if token else "MISSING")
except Exception as e:
    print("❌ Exception raised:")
    traceback.print_exc()
    sys.exit(1)
PY
